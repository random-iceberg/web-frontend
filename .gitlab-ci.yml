# https://docs.gitlab.com/ci/yaml

stages: # List of stages for jobs, and their order of execution
  # No separate build/test stages, as in this case the building and the testing are independent.
  # So, just one stage, to run all the jobs in parallel (only if the runner actually allows it)
  - default

docker-build:
  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml
  image: docker:cli
  stage: default
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  variables:
        DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    # Try to build the image
    - docker build --pull --tag "$DOCKER_IMAGE_NAME" --target prod .
    # But only push it in the registry when it is a long-term branch
    - if [[ $PUSH == true ]]; then docker push "$DOCKER_IMAGE_NAME"; fi

  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:latest
        PUSH: "true"
    - if: $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "fake-dev"
      variables:
        PUSH: "true"
    - if: $CI_COMMIT_BRANCH
      variables:
        PUSH: "false"

checks:
  image: node:latest
  stage: default
  script:
    - npm install
    - CI=true npm test
    - npm run lint
    - npx prettier --check src
